{"version":3,"sources":["Component/Searchbar.js","servise/Api.js","Component/ImageGalleryItem.js","Component/Button.js","Component/Modal.js","Component/Loader.js","Component/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","state","query","handleChenge","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","Component","axios","defaults","baseURL","PixImages","curentPage","url","get","then","data","ImageGalleryItem","imgGallery","largeImgUrl","onHandleClick","id","webformatURL","onClick","src","alt","Button","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloce","handleBackdropClick","event","target","window","addEventListener","createPortal","children","App","color","height","width","timeout","React","ImageGallery","images","currentPage","isLoading","error","showModal","fetchGallery","setTimeout","pixabayApi","response","length","alert","prevState","catch","finally","toggleModal","handleClickImage","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderButton","map","img","largeImageURL","onHandleClose","onChangeQuery","className","Searchbar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00f74009.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass SearchBar extends Component {\r\n    state = { query: '' };\r\n\r\n    handleChenge = e => {\r\n        this.setState({ query: e.currentTarget.value });\r\n    };\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.query);\r\n        this.setState({ query: '' });\r\n    };\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleChenge}\r\n                />\r\n\r\n            </form>\r\n        );\r\n    };\r\n    \r\n}\r\nexport default SearchBar;\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = `https://pixabay.com/api/`;\r\nlet ApiKey = `19822472-14ec0e3f9ba277805ee5b06f8`;\r\nconst perPage = 12;\r\n\r\nconst PixImages = ({ query = \"\", curentPage = 1 }) => {\r\n    const url = `https://pixabay.com/api/?q=${query}&page=${curentPage}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\r\n\r\n    return axios.get(url).then(({ data }) => {\r\n        return data.this;\r\n    });\r\n};\r\n\r\n\r\nexport default PixImages;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst ImageGalleryItem= ({ imgGallery, largeImgUrl, onHandleClick }) => {\r\n  const { id, webformatURL } = imgGallery;\r\n  return (\r\n    <li\r\n      \r\n      onClick={() => onHandleClick(largeImgUrl)}\r\n    >\r\n      <img src={webformatURL} alt={id} />\r\n    </li>\r\n  );\r\n};\r\n\r\n ImageGalleryItem.propTypes = {\r\n  imgGallery: PropTypes.object.isRequired,\r\n  largeImgUrl: PropTypes.string.isRequired,\r\n  onHandleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n        <button type=\"button\" onClick={onClick}>Load more...</button>\r\n    );\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    componentWillUnmount() {\r\n       window.addEventListener('keydown', this.handleKeyDown); \r\n    }\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onCloce();\r\n        }\r\n    };\r\n    handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onCloce()\r\n        }\r\n    };\r\n    render() {\r\n        return createPortal(          \r\n<div onClick={this.handleBackdropClick}>\r\n  <div>\r\n    <img src={this.props.children} alt=\"\" />\r\n  </div>\r\n</div>,\r\n\r\n            modalRoot,\r\n        );\r\n}\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport pixabayApi from \"../servise/Api\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\nimport Button from \"./Button\";\r\nimport Modal from \"./Modal\";\r\nimport Loader from \"./Loader\";\r\n\r\n\r\n\r\nclass ImageGallery extends Component {\r\n \r\n    state = {\r\n        images: [],\r\n        currentPage: 1,\r\n        isLoading: false,\r\n        error: null,\r\n        showModal: false,\r\n        largeImgUrl: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.query !== this.props.query) {\r\n      this.setState({ currentPage: 1, images: [], error: null }, () =>\r\n        this.fetchGallery()\r\n      );\r\n    }\r\n\r\n    if (prevState.currentPage !== this.state.currentPage) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }\r\n\r\n  fetchGallery = () => {\r\n    const { query } = this.props;\r\n    const { currentPage } = this.state;\r\n    this.setState({ isLoading: true });\r\n\r\n    setTimeout(() => {\r\n      pixabayApi({ query, currentPage })\r\n        .then((response) => {\r\n          if (response.length === 0) {\r\n            alert(`Sorry! ${query} is not found`);\r\n          }\r\n          this.setState((prevState) => ({\r\n            images: [...prevState.images, ...response],\r\n            currentPage: prevState.currentPage + 1,\r\n          }));\r\n        })\r\n        .catch((error) => this.setState({ error }))\r\n        .finally(() => this.setState({ isLoading: false }));\r\n    }, 250);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n    this.setState({ largeImgUrl: null });\r\n  };\r\n\r\n  handleClickImage = (url) => {\r\n    this.toggleModal();\r\n    this.setState({ largeImgUrl: url });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, showModal, largeImgUrl } = this.state;\r\n    const shouldRenderButton = images.length > 11 && !isLoading;\r\n\r\n    return (\r\n      <>\r\n        <ul>\r\n          {images.map((img) => (\r\n            <ImageGalleryItem\r\n              key={img.id}\r\n              imgGallery={img}\r\n              largeImgUrl={img.largeImageURL}\r\n              onHandleClick={this.handleClickImage}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        {showModal && (\r\n          <Modal onHandleClose={this.toggleModal}>\r\n            <img src={largeImgUrl} alt=\"\" />\r\n          </Modal>\r\n        )}\r\n\r\n        {isLoading && <Loader />}\r\n\r\n        {shouldRenderButton && <Button onHandleClick={this.fetchGallery} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default ImageGallery;","import React, { Component } from \"react\";\n\nimport Searchbar from \"./Component/Searchbar\";\nimport ImageGallery from \"./Component/ImageGallery\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    query: \"\",\n  };\n\n  onChangeQuery = (query) => {\n    this.setState({ query });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery query={this.state.query} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}